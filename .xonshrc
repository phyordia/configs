# Start from commands:
#  xonfig web         # Run the configuration tool in the browser to create ~/.xonshrc
#  xonfig tutorial    # Open the xonsh tutorial in the browser
#
#
#

# Exanpding $PATH
$PATH.append('$HOME/miniconda3/bin')
$PATH.append('$HOME/.pyenv/shims/')
$PATH.append('/usr/local/bin')
# XONTRIB
#xontrib load xlsd


### POWERLINE
import os

def get_conda_env():
    _conda_env = ${...}.get('CONDA_DEFAULT_ENV', '')
    return ['🐍 '+_conda_env if _conda_env else "", '#a6e22e', 'BLACK']

def get_path():
    if os.getcwd()  == $HOME:
        icn = ""
    elif os.getcwd() == '/':
        icn = ""
    else:
        icn = "" 

    return [ icn+' {cwd_base} :::', '#a6e22e', 'BLACK']

$PL_EXTRA_SEC = {"conda_env": get_conda_env, 
                 'git_status': lambda: ['::{gitstatus}', "#ffffff", "#ffffff"],
                 'prompt_end': get_path,
                 'my_cwd': lambda: [os.getcwd(), 'WHITE', 'BLACK'] }

$PL_PROMPT='conda_env>prompt_end'
$PL_RPROMPT = '!'  # for no toolbar
$PL_TOOLBAR = 'who>my_cwd>branch>git_status'
xontrib load powerline2

$XONSH_GITSTATUS_BRANCH='{RED}'
$XONSH_GITSTATUS_CHANGED='{RED}'
$PL_COLORS['git_root'] = ( "#00ffcc", "#ff0000")
$PL_COLORS['git_sub_dir'] = ("#1fb198", "BLUE")


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
import sys as _sys
from types import ModuleType as _ModuleType
_mod = _ModuleType("xontrib.conda",
                   "Autogenerated from $($HOME/miniconda3/bin/conda shell.xonsh hook)")
__xonsh__.execer.exec($("$HOME/miniconda3/bin/conda" "shell.xonsh" "hook"),
                      glbs=_mod.__dict__,
                      filename="$($HOME/miniconda3/bin/conda shell.xonsh hook)")
_sys.modules["xontrib.conda"] = _mod
del _sys, _mod, _ModuleType
# <<< conda initialize <<<

